<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="699px" preserveAspectRatio="none" style="width:870px;height:699px;" version="1.1" viewBox="0 0 870 699" width="870px" zoomAndPan="magnify"><defs><filter height="300%" id="fw7uff6oy34di" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster spot--><polygon fill="#FFFFFF" filter="url(#fw7uff6oy34di)" points="22,24,63,24,70,46.2969,848,46.2969,848,511,22,511,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="70" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="35" x="26" y="38.9951">spot</text><!--cluster what we have to implement--><path d="M104,542 C104,539 106,537 109,537 C112,537 114,539 114,542 C114,539 116,537 119,537 C122,537 124,539 124,542 C124,539 126,537 129,537 C132,537 134,539 134,542 C134,539 136,537 139,537 C142,537 144,539 144,542 C144,539 146,537 149,537 C152,537 154,539 154,542 C154,539 156,537 159,537 C162,537 164,539 164,542 C164,539 166,537 169,537 C172,537 174,539 174,542 C174,539 176,537 179,537 C182,537 184,539 184,542 C184,539 186,537 189,537 C192,537 194,539 194,542 C194,539 196,537 199,537 C202,537 204,539 204,542 C204,539 206,537 209,537 C212,537 214,539 214,542 C214,539 216,537 219,537 C222,537 224,539 224,542 C224,539 226,537 229,537 C232,537 234,539 234,542 C234,539 236,537 239,537 C242,537 244,539 244,542 C244,539 246,537 249,537 C252,537 254,539 254,542 C254,539 256,537 259,537 C262,537 264,539 264,542 C264,539 266,537 269,537 C272,537 274,539 274,542 C274,539 276,537 279,537 C282,537 284,539 284,542 C284,539 286,537 289,537 C292,537 294,539 294,542 C294,539 296,537 299,537 C302,537 304,539 304,542 C304,539 306,537 309,537 C312,537 314,539 314,542 C314,539 316,537 319,537 C322,537 324,539 324,542 C324,539 326,537 329,537 C332,537 334,539 334,542 C334,539 336,537 339,537 C342,537 344,539 344,542 C344,539 346,537 349,537 C352,537 354,539 354,542 C354,539 356,537 359,537 C362,537 364,539 364,542 C364,539 366,537 369,537 C372,537 374,539 374,542 C374,539 376,537 379,537 C382,537 384,539 384,542 C384,539 386,537 389,537 C392,537 394,539 394,542 C394,539 396,537 399,537 C402,537 404,539 404,542 C404,539 406,537 409,537 C412,537 414,539 414,542 C414,539 416,537 419,537 C422,537 424,539 424,542 C424,539 426,537 429,537 C432,537 434,539 434,542 C434,539 436,537 439,537 C442,537 444,539 444,542 C444,539 446,537 449,537 C452,537 454,539 454,542 C454,539 456,537 459,537 C462,537 464,539 464,542 C464,539 466,537 469,537 C472,537 474,539 474,542 C474,539 476,537 479,537 C482,537 484,539 484,542 C484,539 486,537 489,537 C492,537 494,539 494,542 C494,539 496,537 499,537 C502,537 504,539 504,542 C504,539 506,537 509,537 C512,537 514,539 514,542 C514,539 516,537 519,537 C522,537 524,539 524,542 C524,539 526,537 529,537 C532,537 534,539 534,542 C534,539 536,537 539,537 C542,537 544,539 544,542 C544,539 546,537 549,537 C552,537 554,539 554,542 C554,539 556,537 559,537 C562,537 564,539 564,542 C564,539 566,537 569,537 C572,537 574,539 574,542 C574,539 576,537 579,537 C582,537 584,539 584,542 C584,539 586,537 589,537 C592,537 594,539 594,542 C594,539 596,537 599,537 C602,537 604,539 604,542 C604,539 606,537 609,537 C612,537 614,539 614,542 C614,539 616,537 619,537 C622,537 624,539 624,542 C624,539 626,537 629,537 C632,537 634,539 634,542 C634,539 636,537 639,537 C642,537 644,539 644,542 C644,539 646,537 649,537 C652,537 654,539 654,542 C654,539 656,537 659,537 C662,537 664,539 664,542 C664,539 666,537 669,537 C672,537 674,539 674,542 C674,539 676,537 679,537 C682,537 684,539 684,542 C684,539 686,537 689,537 C692,537 694,539 694,542 C694,539 696,537 699,537 C702,537 704,539 704,542 C704,539 706,537 709,537 C712,537 714,539 714,542 C714,539 716,537 719,537 C722,537 724,539 724,542 C724,539 726,537 729,537 C732,537 734,539 734,542 C734,539 736,537 739,537 C742,537 744,539 744,542 C744,539 746,537 749,537 C752,537 754,539 754,542 C754,539 756,537 759,537 C762,537 764,539 764,542 C764,539 766,537 769,537 C772,537 774,539 774,542 C777,542 779,544 779,547 C779,550 777,552 774,552 C777,552 779,554 779,557 C779,560 777,562 774,562 C777,562 779,564 779,567 C779,570 777,572 774,572 C777,572 779,574 779,577 C779,580 777,582 774,582 C777,582 779,584 779,587 C779,590 777,592 774,592 C777,592 779,594 779,597 C779,600 777,602 774,602 C777,602 779,604 779,607 C779,610 777,612 774,612 C777,612 779,614 779,617 C779,620 777,622 774,622 C777,622 779,624 779,627 C779,630 777,632 774,632 C777,632 779,634 779,637 C779,640 777,642 774,642 C777,642 779,644 779,647 C779,650 777,652 774,652 C777,652 779,654 779,657 C779,660 777,662 774,662 C777,662 779,664 779,667 C779,670 777,672 774,672 C777,672 779,674 779,677 C779,680 777,682 774,682 C774,685 771,687 769,687 C766,687 764,685 764,682 C764,685 761,687 759,687 C756,687 754,685 754,682 C754,685 751,687 749,687 C746,687 744,685 744,682 C744,685 741,687 739,687 C736,687 734,685 734,682 C734,685 731,687 729,687 C726,687 724,685 724,682 C724,685 721,687 719,687 C716,687 714,685 714,682 C714,685 711,687 709,687 C706,687 704,685 704,682 C704,685 701,687 699,687 C696,687 694,685 694,682 C694,685 691,687 689,687 C686,687 684,685 684,682 C684,685 681,687 679,687 C676,687 674,685 674,682 C674,685 671,687 669,687 C666,687 664,685 664,682 C664,685 661,687 659,687 C656,687 654,685 654,682 C654,685 651,687 649,687 C646,687 644,685 644,682 C644,685 641,687 639,687 C636,687 634,685 634,682 C634,685 631,687 629,687 C626,687 624,685 624,682 C624,685 621,687 619,687 C616,687 614,685 614,682 C614,685 611,687 609,687 C606,687 604,685 604,682 C604,685 601,687 599,687 C596,687 594,685 594,682 C594,685 591,687 589,687 C586,687 584,685 584,682 C584,685 581,687 579,687 C576,687 574,685 574,682 C574,685 571,687 569,687 C566,687 564,685 564,682 C564,685 561,687 559,687 C556,687 554,685 554,682 C554,685 551,687 549,687 C546,687 544,685 544,682 C544,685 541,687 539,687 C536,687 534,685 534,682 C534,685 531,687 529,687 C526,687 524,685 524,682 C524,685 521,687 519,687 C516,687 514,685 514,682 C514,685 511,687 509,687 C506,687 504,685 504,682 C504,685 501,687 499,687 C496,687 494,685 494,682 C494,685 491,687 489,687 C486,687 484,685 484,682 C484,685 481,687 479,687 C476,687 474,685 474,682 C474,685 471,687 469,687 C466,687 464,685 464,682 C464,685 461,687 459,687 C456,687 454,685 454,682 C454,685 451,687 449,687 C446,687 444,685 444,682 C444,685 441,687 439,687 C436,687 434,685 434,682 C434,685 431,687 429,687 C426,687 424,685 424,682 C424,685 421,687 419,687 C416,687 414,685 414,682 C414,685 411,687 409,687 C406,687 404,685 404,682 C404,685 401,687 399,687 C396,687 394,685 394,682 C394,685 391,687 389,687 C386,687 384,685 384,682 C384,685 381,687 379,687 C376,687 374,685 374,682 C374,685 371,687 369,687 C366,687 364,685 364,682 C364,685 361,687 359,687 C356,687 354,685 354,682 C354,685 351,687 349,687 C346,687 344,685 344,682 C344,685 341,687 339,687 C336,687 334,685 334,682 C334,685 331,687 329,687 C326,687 324,685 324,682 C324,685 321,687 319,687 C316,687 314,685 314,682 C314,685 311,687 309,687 C306,687 304,685 304,682 C304,685 301,687 299,687 C296,687 294,685 294,682 C294,685 291,687 289,687 C286,687 284,685 284,682 C284,685 281,687 279,687 C276,687 274,685 274,682 C274,685 271,687 269,687 C266,687 264,685 264,682 C264,685 261,687 259,687 C256,687 254,685 254,682 C254,685 251,687 249,687 C246,687 244,685 244,682 C244,685 241,687 239,687 C236,687 234,685 234,682 C234,685 231,687 229,687 C226,687 224,685 224,682 C224,685 221,687 219,687 C216,687 214,685 214,682 C214,685 211,687 209,687 C206,687 204,685 204,682 C204,685 201,687 199,687 C196,687 194,685 194,682 C194,685 191,687 189,687 C186,687 184,685 184,682 C184,685 181,687 179,687 C176,687 174,685 174,682 C174,685 171,687 169,687 C166,687 164,685 164,682 C164,685 161,687 159,687 C156,687 154,685 154,682 C154,685 151,687 149,687 C146,687 144,685 144,682 C144,685 141,687 139,687 C136,687 134,685 134,682 C134,685 131,687 129,687 C126,687 124,685 124,682 C124,685 121,687 119,687 C116,687 114,685 114,682 C114,685 111,687 109,687 C106,687 104,685 104,682 C101,682 99,680 99,677 C99,674 101,672 104,672 C101,672 99,670 99,667 C99,664 101,662 104,662 C101,662 99,660 99,657 C99,654 101,652 104,652 C101,652 99,650 99,647 C99,644 101,642 104,642 C101,642 99,640 99,637 C99,634 101,632 104,632 C101,632 99,630 99,627 C99,624 101,622 104,622 C101,622 99,620 99,617 C99,614 101,612 104,612 C101,612 99,610 99,607 C99,604 101,602 104,602 C101,602 99,600 99,597 C99,594 101,592 104,592 C101,592 99,590 99,587 C99,584 101,582 104,582 C101,582 99,580 99,577 C99,574 101,572 104,572 C101,572 99,570 99,567 C99,564 101,562 104,562 C101,562 99,560 99,557 C99,554 101,552 104,552 C101,552 99,550 99,547 C99,544 101,542 104,542 " fill="#FFFFFF" filter="url(#fw7uff6oy34di)" style="stroke: #000000; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="219" x="326.5" y="560.9951">what we have to implement</text><!--class twa--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="216.0586" id="twa" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="253.5" y="83"/><ellipse cx="412.25" cy="99" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M412.3594,94.3438 L411.2031,99.4219 L413.5313,99.4219 L412.3594,94.3438 Z M410.875,92.1094 L413.8594,92.1094 L417.2188,104.5 L414.7656,104.5 L414,101.4375 L410.7188,101.4375 L409.9688,104.5 L407.5313,104.5 L410.875,92.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="23" x="432.75" y="103.1543">twa</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="601.5" y1="115" y2="115"/><polygon fill="none" points="264.5,121.9023,268.5,125.9023,264.5,129.9023,260.5,125.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="273.5" y="129.2104">twa_succ_iterator* iter_cache_</text><polygon fill="none" points="264.5,134.707,268.5,138.707,264.5,142.707,260.5,138.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="273.5" y="142.0151">bdd_dict_ptr dict_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="254.5" x2="601.5" y1="148.6094" y2="148.6094"/><polygon fill="#FFFF44" points="264.5,155.5117,268.5,159.5117,264.5,163.5117,260.5,159.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="273.5" y="162.8198">twa(const bdd_dict_ptr&amp;)</text><ellipse cx="264.5" cy="190.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="273.5" y="192.4292">state* get_init_state()</text><ellipse cx="264.5" cy="202.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="201" x="273.5" y="205.2339">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="264.5" cy="215.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="273.5" y="218.0386">internal::succ_iterable succ(const state*)</text><ellipse cx="264.5" cy="228.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="273.5" y="230.8433">void release_iter(twa_succ_iterator*)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="396.5" y1="175.8164" y2="175.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="396.5" y="179.1245">exploration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="459.5" x2="601.5" y1="175.8164" y2="175.8164"/><ellipse cx="264.5" cy="258.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="273.5" y="260.4526">std::string format_state(const state*)</text><ellipse cx="264.5" cy="270.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="273.5" y="273.2573">state* project_state(const state*, const const_twa_ptr&amp;)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="375" y1="243.8398" y2="243.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="375" y="247.1479">state manipulation</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="481" x2="601.5" y1="243.8398" y2="243.8398"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="254.5" x2="354.5" y1="286.2539" y2="286.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="354.5" y="289.562">other methods not shown</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="501.5" x2="601.5" y1="286.2539" y2="286.2539"/><!--class twa_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="150.4375" id="twa_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="62" y="116"/><ellipse cx="83.3" cy="132" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M83.4094,127.3438 L82.2531,132.4219 L84.5813,132.4219 L83.4094,127.3438 Z M81.925,125.1094 L84.9094,125.1094 L88.2688,137.5 L85.8156,137.5 L85.05,134.4375 L81.7688,134.4375 L81.0188,137.5 L78.5813,137.5 L81.925,125.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="110" x="98.7" y="136.1543">twa_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63" x2="217" y1="148" y2="148"/><ellipse cx="73" cy="176.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="82" y="179.0151">bool first()</text><ellipse cx="73" cy="189.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="82" y="191.8198">bool next()</text><ellipse cx="73" cy="202.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="82" y="204.6245">bool done()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="63" x2="116.5" y1="162.4023" y2="162.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="116.5" y="165.7104">iteration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="163.5" x2="217" y1="162.4023" y2="162.4023"/><ellipse cx="73" cy="231.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="82" y="234.2339">const state* dst()</text><ellipse cx="73" cy="244.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="60" x="82" y="247.0386">bdd cond()</text><ellipse cx="73" cy="257.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="82" y="259.8433">acc_cond::mark_t acc()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="63" x2="111" y1="217.6211" y2="217.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="111" y="220.9292">inspection</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="169" x2="217" y1="217.6211" y2="217.6211"/><!--class state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="state" style="stroke: #A80036; stroke-width: 1.5;" width="170" x="638" y="135"/><ellipse cx="702.75" cy="151" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M702.8594,146.3438 L701.7031,151.4219 L704.0313,151.4219 L702.8594,146.3438 Z M701.375,144.1094 L704.3594,144.1094 L707.7188,156.5 L705.2656,156.5 L704.5,153.4375 L701.2188,153.4375 L700.4688,156.5 L698.0313,156.5 L701.375,144.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="723.25" y="155.1543">state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="639" x2="807" y1="167" y2="167"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="639" x2="807" y1="175" y2="175"/><ellipse cx="649" cy="186.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="658" y="189.2104">int compare(const state*)</text><ellipse cx="649" cy="199.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="658" y="202.0151">size_t hash()</text><ellipse cx="649" cy="212.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="658" y="214.8198">state* clone()</text><ellipse cx="649" cy="225.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="658" y="227.6245">void destroy()</text><polygon fill="#FFFF44" points="649,233.1211,653,237.1211,649,241.1211,645,237.1211" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="658" y="240.4292">~state()</text><!--class kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="73.6094" id="kripke" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="322" y="378"/><ellipse cx="404.75" cy="394" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M404.8594,389.3438 L403.7031,394.4219 L406.0313,394.4219 L404.8594,389.3438 Z M403.375,387.1094 L406.3594,387.1094 L409.7188,399.5 L407.2656,399.5 L406.5,396.4375 L403.2188,396.4375 L402.4688,399.5 L400.0313,399.5 L403.375,387.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="425.25" y="398.1543">kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="323" x2="533" y1="410" y2="410"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="323" x2="533" y1="418" y2="418"/><ellipse cx="333" cy="429.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="342" y="432.2104">fair_kripke(const bdd_dict_ptr&amp;)</text><ellipse cx="333" cy="442.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="342" y="445.0151">bdd state_condition(const state*)</text><!--class kripke_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="73" y="359"/><ellipse cx="113.65" cy="375" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M113.7594,370.3438 L112.6031,375.4219 L114.9313,375.4219 L113.7594,370.3438 Z M112.275,368.1094 L115.2594,368.1094 L118.6188,380.5 L116.1656,380.5 L115.4,377.4375 L112.1188,377.4375 L111.3688,380.5 L108.9313,380.5 L112.275,368.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="133.35" y="379.1543">kripke_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="286" y1="391" y2="391"/><polygon fill="none" points="84,397.9023,88,401.9023,84,405.9023,80,401.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="93" y="405.2104">bdd cond_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="74" x2="286" y1="411.8047" y2="411.8047"/><ellipse cx="84" cy="423.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="93" y="426.0151">kripke_succ_iterator(const bdd&amp;)</text><ellipse cx="84" cy="436.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="93" y="438.8198">void recycle(const bdd&amp;)</text><ellipse cx="84" cy="449.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="93" y="451.6245">bdd cond()</text><ellipse cx="84" cy="462.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="93" y="464.4292">acc_cond::mark_t acc()</text><!--class demo_kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_kripke" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="308" y="570"/><ellipse cx="384.25" cy="586" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M387.2188,591.6406 Q386.6406,591.9375 386,592.0859 Q385.3594,592.2344 384.6563,592.2344 Q382.1563,592.2344 380.8359,590.5859 Q379.5156,588.9375 379.5156,585.8125 Q379.5156,582.6875 380.8359,581.0313 Q382.1563,579.375 384.6563,579.375 Q385.3594,579.375 386.0078,579.5313 Q386.6563,579.6875 387.2188,579.9844 L387.2188,582.7031 Q386.5938,582.125 386,581.8516 Q385.4063,581.5781 384.7813,581.5781 Q383.4375,581.5781 382.75,582.6484 Q382.0625,583.7188 382.0625,585.8125 Q382.0625,587.9063 382.75,588.9766 Q383.4375,590.0469 384.7813,590.0469 Q385.4063,590.0469 386,589.7734 Q386.5938,589.5 387.2188,588.9219 L387.2188,591.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="404.75" y="590.1543">demo_kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="309" x2="547" y1="602" y2="602"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="309" x2="547" y1="610" y2="610"/><ellipse cx="319" cy="621.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="328" y="624.2104">state* get_init_state()</text><ellipse cx="319" cy="634.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="328" y="637.0151">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="319" cy="647.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="328" y="649.8198">std::string format_state(const state*)</text><ellipse cx="319" cy="660.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="328" y="662.6245">bdd state_condition(const state*)</text><!--class demo_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="117.5" y="570"/><ellipse cx="132.5" cy="586" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M135.4688,591.6406 Q134.8906,591.9375 134.25,592.0859 Q133.6094,592.2344 132.9063,592.2344 Q130.4063,592.2344 129.0859,590.5859 Q127.7656,588.9375 127.7656,585.8125 Q127.7656,582.6875 129.0859,581.0313 Q130.4063,579.375 132.9063,579.375 Q133.6094,579.375 134.2578,579.5313 Q134.9063,579.6875 135.4688,579.9844 L135.4688,582.7031 Q134.8438,582.125 134.25,581.8516 Q133.6563,581.5781 133.0313,581.5781 Q131.6875,581.5781 131,582.6484 Q130.3125,583.7188 130.3125,585.8125 Q130.3125,587.9063 131,588.9766 Q131.6875,590.0469 133.0313,590.0469 Q133.6563,590.0469 134.25,589.7734 Q134.8438,589.5 135.4688,588.9219 L135.4688,591.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="146.5" y="590.1543">demo_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="118.5" x2="271.5" y1="602" y2="602"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="118.5" x2="271.5" y1="610" y2="610"/><ellipse cx="128.5" cy="621.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="137.5" y="624.2104">bool first()</text><ellipse cx="128.5" cy="634.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="137.5" y="637.0151">bool next()</text><ellipse cx="128.5" cy="647.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="137.5" y="649.8198">bool done()</text><ellipse cx="128.5" cy="660.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="137.5" y="662.6245">const state* dst()</text><!--class demo_state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="86.4141" id="demo_state" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="583" y="576.5"/><ellipse cx="627.75" cy="592.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M630.7188,598.1406 Q630.1406,598.4375 629.5,598.5859 Q628.8594,598.7344 628.1563,598.7344 Q625.6563,598.7344 624.3359,597.0859 Q623.0156,595.4375 623.0156,592.3125 Q623.0156,589.1875 624.3359,587.5313 Q625.6563,585.875 628.1563,585.875 Q628.8594,585.875 629.5078,586.0313 Q630.1563,586.1875 630.7188,586.4844 L630.7188,589.2031 Q630.0938,588.625 629.5,588.3516 Q628.9063,588.0781 628.2813,588.0781 Q626.9375,588.0781 626.25,589.1484 Q625.5625,590.2188 625.5625,592.3125 Q625.5625,594.4063 626.25,595.4766 Q626.9375,596.5469 628.2813,596.5469 Q628.9063,596.5469 629.5,596.2734 Q630.0938,596 630.7188,595.4219 L630.7188,598.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="648.25" y="596.6543">demo_state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="584" x2="754" y1="608.5" y2="608.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="584" x2="754" y1="616.5" y2="616.5"/><ellipse cx="594" cy="628.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="603" y="630.7104">int compare(const state*)</text><ellipse cx="594" cy="641.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="603" y="643.5151">size_t hash()</text><ellipse cx="594" cy="654.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="603" y="656.3198">state* clone()</text><!--link twa to kripke--><path d="M428,319.346 C428,340.77 428,361.362 428,377.838 " fill="none" id="twa-kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="421,319.098,428,299.098,435,319.098,421,319.098" style="stroke: #A80036; stroke-width: 1.0;"/><!--link twa_succ_iterator to kripke_succ_iterator--><path d="M156.972,286.194 C161.433,310.952 166.099,336.852 170.056,358.812 " fill="none" id="twa_succ_iterator-kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="150.033,287.156,153.375,266.231,163.811,284.673,150.033,287.156" style="stroke: #A80036; stroke-width: 1.0;"/><!--link state to demo_state--><path d="M713.475,267.231 C702.087,357.176 683.427,504.552 674.327,576.429 " fill="none" id="state-demo_state" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="706.539,266.282,715.996,247.32,720.428,268.041,706.539,266.282" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke_succ_iterator to demo_succ_iterator--><path d="M185.584,491.381 C187.523,517.554 189.644,546.2 191.382,569.661 " fill="none" id="kripke_succ_iterator-demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="178.576,491.529,184.079,471.067,192.537,490.495,178.576,491.529" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke to demo_kripke--><path d="M428,472.551 C428,503.089 428,540.415 428,569.674 " fill="none" id="kripke-demo_kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="421,472.203,428,452.203,435,472.203,421,472.203" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
  package spot {
    together {
      abstract class twa {
        #twa_succ_iterator* iter_cache_
        #bdd_dict_ptr dict_
        __
        #twa(const bdd_dict_ptr&)
        .. exploration ..
        +{abstract}state* get_init_state()
        +{abstract}twa_succ_iterator* succ_iter(state*)
        +internal::succ_iterable succ(const state*)
        +void release_iter(twa_succ_iterator*)
        .. state manipulation ..
        +{abstract} std::string format_state(const state*)
        +state* project_state(const state*, const const_twa_ptr&)
        .. other methods not shown..
      }
      abstract class twa_succ_iterator {
        .. iteration ..
        {abstract}+bool first()
        {abstract}+bool next()
        {abstract}+bool done()
        .. inspection ..
        {abstract}+const state* dst()
        {abstract}+bdd cond()
        {abstract}+acc_cond::mark_t acc()
      }

      abstract class state {
        +{abstract}int compare(const state*)
        +{abstract}size_t hash()
        +{abstract}state* clone()
        +void destroy()
        #~state()
      }
    }
    together {
      abstract class kripke {
        +fair_kripke(const bdd_dict_ptr&)
        +{abstract}bdd state_condition(const state*)
      }
      abstract class kripke_succ_iterator {
        #bdd cond_
        +kripke_succ_iterator(const bdd&)
        +void recycle(const bdd&)
        +bdd cond()
        +acc_cond::mark_t acc()
      }
    }
    twa <|- - kripke
    twa_succ_iterator <|- - kripke_succ_iterator
  }

  package "what we have to implement" <<Cloud>> {
      class demo_kripke {
        +state* get_init_state()
        +twa_succ_iterator* succ_iter(state*)
        +std::string format_state(const state*)
        +bdd state_condition(const state*)
      }
      class demo_succ_iterator {
        +bool first()
        +bool next()
        +bool done()
        +const state* dst()
      }
      class demo_state {
        +int compare(const state*)
        +size_t hash()
        +state* clone()
      }
  }
state <|- - demo_state
kripke_succ_iterator <|- - demo_succ_iterator
kripke <|- - demo_kripke
@enduml

PlantUML version 1.2018.00(Thu Jan 04 19:42:56 UTC 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_151-8u151-b12-1~deb9u1-b12
Operating System: Linux
OS Version: 4.14.0-1-amd64
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>